-- T·∫°o ScreenGui
local sg = Instance.new("ScreenGui")
sg.Name = "KeySystem"
sg.ResetOnSpawn = false

-- T·∫°o Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 200)
frame.Position = UDim2.new(0.5, -150, 0.5, -100)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Parent = sg

-- Ti√™u ƒë·ªÅ
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.Text = "üîë Key System"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 24
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Parent = frame

-- TextBox nh·∫≠p key
local box = Instance.new("TextBox")
box.Size = UDim2.new(1, -40, 0, 40)
box.Position = UDim2.new(0, 20, 0, 60)
box.PlaceholderText = "Nh·∫≠p key..."
box.Font = Enum.Font.SourceSans
box.TextSize = 20
box.BackgroundColor3 = Color3.fromRGB(60,60,60)
box.TextColor3 = Color3.fromRGB(255,255,255)
box.Parent = frame

-- N√∫t GetKey
local getKey = Instance.new("TextButton")
getKey.Size = UDim2.new(0, 80, 0, 30)
getKey.Position = UDim2.new(0, 20, 1, -40)
getKey.Text = "GetKey"
getKey.BackgroundColor3 = Color3.fromRGB(0,170,255)
getKey.TextColor3 = Color3.fromRGB(255,255,255)
getKey.Font = Enum.Font.SourceSansBold
getKey.TextSize = 18
getKey.Parent = frame

-- N√∫t Submit
local submit = Instance.new("TextButton")
submit.Size = UDim2.new(0, 80, 0, 30)
submit.Position = UDim2.new(0.5, -40, 1, -40)
submit.Text = "Submit"
submit.BackgroundColor3 = Color3.fromRGB(0,200,100)
submit.TextColor3 = Color3.fromRGB(255,255,255)
submit.Font = Enum.Font.SourceSansBold
submit.TextSize = 18
submit.Parent = frame

-- N√∫t Exit
local exit = Instance.new("TextButton")
exit.Size = UDim2.new(0, 80, 0, 30)
exit.Position = UDim2.new(1, -100, 1, -40)
exit.Text = "Exit"
exit.BackgroundColor3 = Color3.fromRGB(200,50,50)
exit.TextColor3 = Color3.fromRGB(255,255,255)
exit.Font = Enum.Font.SourceSansBold
exit.TextSize = 18
exit.Parent = frame

-- Th√™m ScreenGui v√†o PlayerGui
sg.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

-- Function ƒë·ªÉ load main hub
local function loadMainHub()
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Zumaru Hub",
    SubTitle = "by vinhth.",
    TabWidth = 160,
    Size = UDim2.fromOffset(501, 340),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local Tabs = {
    Info = Window:AddTab({ Title = "Info", Icon = "info" }),
    Main = Window:AddTab({ Title = "Main", Icon = "book" }),
    Esp = Window:AddTab({ Title = "Esp", Icon = "clipboard" }),
    Visual = Window:AddTab({ Title = "Visual", Icon = "compass" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "settings" }),
}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Variables
local highlights = {}
local espStorage = {}
local lteInstances = {}
local floatConn, timerConn, speedConn
local playerPlot = nil
local plotsFolder = workspace:FindFirstChild("Plots")
local selectedTool = nil
local selectedSlot = 1
local selectedItem = "Slap"
local speedBoostEnabled = false
local baseLockEnabled = false
local onoffgui1 = false
local infJumpEnabled = false

local DEFAULT_SPEED = 16
local BOOSTED_SPEED = 50
local lastJumpTime = 0
local COOLDOWN = 0.5
local JUMP_FORCE = 50
local JUMP_DURATION = 0.2

-- Gradient function
function gradient(text, startColor, endColor)
    local result = ""
    local length = #text

    for i = 1, length do
        local t = (i - 1) / math.max(length - 1, 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)

        local char = text:sub(i, i)
        result = result .. "<font color=\"rgb(" .. r ..", " .. g .. ", " .. b .. ")\">" .. char .. "</font>"
    end

    return result
end

-- Info Tab
Tabs.Info:AddButton({
    Title = "Copy Link Discord",
    Description = "Copy Discord link to clipboard",
    Callback = function()
        -- Add Discord link functionality here
        Window:Dialog({
            Title = "Discord",
            Content = "Discord link copied to clipboard!",
            Buttons = {
                {
                    Title = "Confirm",
                    Callback = function()
                        print("Confirmed")
                    end
                }
            }
        })
    end
})

-- Main Tab - Tool Section
local ToolSection = Tabs.Main:AddSection("Tool")

-- Get tool options
local toolOptions = {}
for _, item in pairs(ReplicatedStorage:WaitForChild("Items"):GetChildren()) do
    if item:IsA("Tool") then
        table.insert(toolOptions, item.Name)
    end
end

local ToolDropdown = Tabs.Main:AddDropdown("ToolDropdown", {
    Title = "Select Tool",
    Values = toolOptions,
    Multi = false,
    Default = toolOptions[1] or "None",
})

ToolDropdown:OnChanged(function(Value)
    selectedTool = Value
end)

Tabs.Main:AddButton({
    Title = "Get Select Tool",
    Description = "Get the selected tool",
    Callback = function()
        if selectedTool and LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            local tool = ReplicatedStorage.Items:FindFirstChild(selectedTool)
            if tool and tool:IsA("Tool") then
                local clonedTool = tool:Clone()
                clonedTool.Parent = LocalPlayer.Backpack
            end
        end
    end
})

Tabs.Main:AddButton({
    Title = "Get All Tool",
    Description = "Get all available tools",
    Callback = function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            for _, item in pairs(game.ReplicatedStorage.Items:GetChildren()) do
                if item:IsA("Tool") then
                    local clonedTool = item:Clone()
                    clonedTool.Parent = LocalPlayer.Backpack
                end
            end
        end
    end
})

-- Speed Section
local SpeedSection = Tabs.Main:AddSection("Speed")

local SpeedToggle = Tabs.Main:AddToggle("SpeedToggle", {
    Title = "Boost Speed",
    Default = false
})

SpeedToggle:OnChanged(function(Value)
    speedBoostEnabled = Value
    if speedConn then
        speedConn:Disconnect()
        speedConn = nil
    end
    
    if Value then
        speedConn = RunService.Heartbeat:Connect(function()
            local character = LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local rootPart = character:FindFirstChild("HumanoidRootPart")
                
                if humanoid and rootPart and humanoid.MoveDirection.Magnitude > 0 then
                    local moveDir = humanoid.MoveDirection
                    rootPart.Velocity = Vector3.new(
                        moveDir.X * BOOSTED_SPEED,
                        rootPart.Velocity.Y,
                        moveDir.Z * BOOSTED_SPEED
                    )
                end
            end
        end)
    end
end)

-- Local Section
local LocalSection = Tabs.Main:AddSection("Local")

-- Create display GUI for base lock
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local displayGui = Instance.new("ScreenGui")
displayGui.Name = "BaseLockDisplay"
displayGui.ResetOnSpawn = false
displayGui.Parent = PlayerGui

local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(0, 50, 0, 70)
textLabel.Position = UDim2.new(0.5, -100, 0.1, 0)
textLabel.BackgroundTransparency = 1
textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
textLabel.TextScaled = true
textLabel.Font = Enum.Font.SourceSansBold
textLabel.Text = "Loading..."
textLabel.Active = true
textLabel.Draggable = true
textLabel.Visible = onoffgui1
textLabel.Parent = displayGui

local function findBaseTextLabel()
    local playerName = LocalPlayer.Name
    local targetText = playerName .. "'s Base"

    for _, descendant in pairs(workspace:GetDescendants()) do
        if descendant:IsA("TextLabel") and descendant.Text == targetText then
            return descendant
        end
    end
    return nil
end

local function updateBaseLockVisual()
    if onoffgui1 then
        local textLabelFound = findBaseTextLabel()
        if textLabelFound then
            local touchPart = textLabelFound.Parent.Parent.Parent.Parent:FindFirstChild("Purchases")
            if touchPart then
                touchPart = touchPart:FindFirstChild("PlotBlock")
                if touchPart then
                    touchPart = touchPart:FindFirstChild("Main")
                    if touchPart and touchPart:FindFirstChild("BillboardGui") then
                        local remainingTimeText = touchPart.BillboardGui:FindFirstChild("RemainingTime")
                        if remainingTimeText and remainingTimeText:IsA("TextLabel") then
                            textLabel.Text = "Locked: " .. remainingTimeText.Text
                        else
                            textLabel.Text = "Locked: No Remaining Time"
                        end
                    else
                        textLabel.Text = "Locked: No BillboardGui"
                    end
                else
                    textLabel.Text = "Locked: No PlotBlock"
                end
            else
                textLabel.Text = "Locked: No Purchases"
            end
        else
            textLabel.Text = "Locked: No Base Found"
        end
    end
end

RunService.RenderStepped:Connect(function()
    textLabel.Visible = onoffgui1
    if onoffgui1 then
        updateBaseLockVisual()
    end
end)

Tabs.Main:AddButton({
    Title = "Tween To Base",
    Description = "Teleport to your base",
    Callback = function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local textLabel = findBaseTextLabel()
            if textLabel then
                local basePart = textLabel.Parent.Parent.Parent
                if basePart:IsA("BasePart") or basePart:IsA("Model") then
                    local targetCFrame = basePart:IsA("BasePart") and basePart.CFrame + Vector3.new(0, 5, 0) or basePart:GetPrimaryPartCFrame() + Vector3.new(0, 5, 0)
                    local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
                    local tween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, tweenInfo, {CFrame = targetCFrame})
                    tween:Play()
                end
            end
        end
    end
})

local BaseLockToggle = Tabs.Main:AddToggle("BaseLockToggle", {
    Title = "Show Base Lock",
    Default = false
})

BaseLockToggle:OnChanged(function(Value)
    onoffgui1 = Value
end)

-- Sell Section
local SellSection = Tabs.Main:AddSection("Sell")

local sellSlots = {}
for i = 1, 10 do
    table.insert(sellSlots, tostring(i))
end

local SellDropdown = Tabs.Main:AddDropdown("SellDropdown", {
    Title = "Select Branrot Sell",
    Values = sellSlots,
    Multi = false,
    Default = "1",
})

SellDropdown:OnChanged(function(Value)
    selectedSlot = tonumber(Value)
end)

Tabs.Main:AddButton({
    Title = "Auto Sell Branrot Select",
    Description = "Sell branrot in selected slot",
    Callback = function()
        local args = { selectedSlot }
        game:GetService("ReplicatedStorage")
            :WaitForChild("Packages")
            :WaitForChild("Net")
            :WaitForChild("RE/PlotService/Sell")
            :FireServer(unpack(args))
    end
})

-- Buy Item Section
local BuySection = Tabs.Main:AddSection("Buy Item")

local itemList = {
    "Slap", "Speed Coil", "Trap", "Iron Slap", "Gravity Coil", "Bee Launcher",
    "Gold Slap", "Coil Combo", "Rage Table", "Diamond Slap", "Grapple Hook",
    "Taser Gun", "Emerald Slap", "Invisibility Cloak", "Boogie Bomb", "Ruby Slap",
    "Medusa's Head", "Dark Matter Slap", "Web Slinger", "Flame Slap", "Quantum Cloner",
    "All Seeing Sentry", "Nuclear Slap", "Rainbowrath Sword", "Body Swap Potion",
    "Splatter Slap", "Paintball Gun"
}

local ItemDropdown = Tabs.Main:AddDropdown("ItemDropdown", {
    Title = "Select Item Buy",
    Values = itemList,
    Multi = false,
    Default = "Slap",
})

ItemDropdown:OnChanged(function(Value)
    selectedItem = Value
end)

Tabs.Main:AddButton({
    Title = "Auto Buy Item Select",
    Description = "Buy selected item",
    Callback = function()
        if selectedItem then
            local args = { selectedItem }
            game:GetService("ReplicatedStorage")
                :WaitForChild("Packages")
                :WaitForChild("Net")
                :WaitForChild("RF/CoinsShopService/RequestBuy")
                :InvokeServer(unpack(args))
        end
    end
})

-- ESP Tab
local BaseEspSection = Tabs.Esp:AddSection("Base")

local function findPlayerPlot()
    if not plotsFolder then return nil end
    for _, plot in plotsFolder:GetChildren() do
        local yourBase = plot:FindFirstChild("YourBase", true)
        if yourBase and yourBase:IsA("BoolValue") and yourBase.Value then
            return plot.Name
        end
    end
    return nil
end

local function createESP(plot, mainPart)
    if lteInstances[plot.Name] then
        lteInstances[plot.Name]:Destroy()
    end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlotESP_"..plot.Name
    billboard.Size = UDim2.new(0, 180, 0, 40)
    billboard.StudsOffset = Vector3.new(0, 5, 0)
    billboard.AlwaysOnTop = true
    billboard.Adornee = mainPart
    billboard.MaxDistance = 1000
    billboard.Parent = plot

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 0.8
    frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    frame.BorderSizePixel = 0

    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, -10, 1, -10)
    label.Position = UDim2.new(0, 5, 0, 5)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.TextStrokeTransparency = 0.5
    label.TextStrokeColor3 = Color3.new(0, 0, 0)
    label.Parent = frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = frame

    frame.Parent = billboard
    lteInstances[plot.Name] = billboard

    return billboard
end

local espThread = nil

local BaseEspToggle = Tabs.Esp:AddToggle("BaseEspToggle", {
    Title = "Esp Base",
    Default = false
})

BaseEspToggle:OnChanged(function(Value)
    if Value then
        playerPlot = findPlayerPlot()
        if espThread then
            espThread:Disconnect()
        end
        espThread = RunService.RenderStepped:Connect(function()
            if not plotsFolder then return end
            
            for _, plot in plotsFolder:GetChildren() do
                local purchases = plot:FindFirstChild("Purchases")
                local plotBlock = purchases and purchases:FindFirstChild("PlotBlock")
                local mainPart = plotBlock and plotBlock:FindFirstChild("Main")
                local billboardGui = mainPart and mainPart:FindFirstChild("BillboardGui")
                local timeLabel = billboardGui and billboardGui:FindFirstChild("RemainingTime")

                if timeLabel and mainPart then
                    local billboard = lteInstances[plot.Name] or createESP(plot, mainPart)
                    local frame = billboard:FindFirstChild("Frame")
                    local label = frame and frame:FindFirstChild("Label")
                    local isUnlocked = (timeLabel.Text == "0s")
                    
                    if label then
                        label.Text = isUnlocked and "Unlocked" or ("Locked: "..timeLabel.Text)
                        if plot.Name == playerPlot then
                            label.TextColor3 = Color3.fromRGB(0, 255, 0)
                        elseif isUnlocked then
                            label.TextColor3 = Color3.fromRGB(255, 50, 50)
                        else
                            label.TextColor3 = Color3.fromRGB(255, 255, 0)
                        end
                    end
                elseif lteInstances[plot.Name] then
                    lteInstances[plot.Name]:Destroy()
                    lteInstances[plot.Name] = nil
                end
            end
        end)
    else
        if espThread then
            espThread:Disconnect()
            espThread = nil
        end
        for _, instance in pairs(lteInstances) do
            instance:Destroy()
        end
        lteInstances = {}
    end
end)

-- Player ESP Section
local PlayerEspSection = Tabs.Esp:AddSection("Player")

local function createPlayerESP(player)
    if not player.Character then return end

    local highlight = Instance.new("Highlight")
    highlight.Parent = player.Character
    highlight.FillTransparency = 1
    highlight.OutlineColor = Color3.new(1, 1, 1)
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

    highlights[player] = highlight

    player.CharacterAdded:Connect(function(character)
        if highlights[player] then
            local newHighlight = highlight:Clone()
            newHighlight.Parent = character
            highlights[player] = newHighlight
        end
    end)
end

local PlayerHighlightToggle = Tabs.Esp:AddToggle("PlayerHighlightToggle", {
    Title = "Esp Highlight",
    Default = false
})

PlayerHighlightToggle:OnChanged(function(Value)
    if Value then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                createPlayerESP(player)
            end
        end
    else
        for player, highlight in pairs(highlights) do
            highlight:Destroy()
        end
        highlights = {}
    end
end)

local function createNameTag(targetPlayer)
    if not targetPlayer.Character then return end

    local character = targetPlayer.Character
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    local billboardGui = Instance.new("BillboardGui")
    local textLabel = Instance.new("TextLabel")

    billboardGui.Name = "PlayerESP"
    billboardGui.Adornee = humanoidRootPart
    billboardGui.Size = UDim2.new(0, 200, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, 2.5, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.LightInfluence = 0
    billboardGui.MaxDistance = 1000

    textLabel.Name = "NameTag"
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = targetPlayer.Name
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    textLabel.TextStrokeTransparency = 0.5
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextSize = 18

    textLabel.Parent = billboardGui
    billboardGui.Parent = character

    espStorage[targetPlayer] = billboardGui

    targetPlayer.CharacterAdded:Connect(function(newChar)
        if espStorage[targetPlayer] then
            billboardGui:Destroy()
            createNameTag(targetPlayer)
        end
    end)
end

local PlayerNameToggle = Tabs.Esp:AddToggle("PlayerNameToggle", {
    Title = "Esp Name",
    Default = false
})

PlayerNameToggle:OnChanged(function(Value)
    if Value then
        for _, targetPlayer in ipairs(Players:GetPlayers()) do
            if targetPlayer ~= LocalPlayer then
                createNameTag(targetPlayer)
            end
        end
    else
        for _, esp in pairs(espStorage) do
            esp:Destroy()
        end
        espStorage = {}
    end
end)

-- Visual Tab
local function safeAirJump()
    if not infJumpEnabled then return end
    local now = os.clock()
    if now - lastJumpTime < COOLDOWN then return end

    local character = LocalPlayer.Character
    if not character then return end

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoid or not rootPart then return end

    lastJumpTime = now

    if rootPart:CanSetNetworkOwnership() then
        rootPart:SetNetworkOwner(LocalPlayer)
    end

    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
    bodyVelocity.Velocity = Vector3.new(0, JUMP_FORCE, 0)
    bodyVelocity.Parent = rootPart

    local connection
    connection = RunService.Heartbeat:Connect(function()
        if os.clock() - lastJumpTime >= JUMP_DURATION then
            bodyVelocity:Destroy()
            if rootPart:CanSetNetworkOwnership() then
                rootPart:SetNetworkOwner(nil)
            end
            connection:Disconnect()
        end
    end)
end

local InfJumpToggle = Tabs.Visual:AddToggle("InfJumpToggle", {
    Title = "Inf Jump",
    Default = false
})

InfJumpToggle:OnChanged(function(Value)
    infJumpEnabled = Value
    if Value then
        UserInputService.JumpRequest:Connect(safeAirJump)
    end
end)

local NoClipToggle = Tabs.Visual:AddToggle("NoClipToggle", {
    Title = "No Clip",
    Default = false
})

NoClipToggle:OnChanged(function(Value)
    getgenv().NoclipEnabled = Value 
    
    local function noclip()
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide == true then
                part.CanCollide = false
            end
        end
    end
    
    local function noclipLoop()
        RunService.Stepped:Connect(function()
            if getgenv().NoclipEnabled then
                noclip()
            end
        end)
    end
    
    noclipLoop()
end)

Tabs.Visual:AddButton({
    Title = "Teleport To Sky",
    Description = "Teleport 150 studs up",
    Callback = function()
        local character = Players.LocalPlayer.Character
        if character then
            local root = character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = root.CFrame + Vector3.new(0, 150, 0)
            end
        end
    end
})

Tabs.Visual:AddButton({
    Title = "Teleport Down",
    Description = "Teleport 189 studs down",
    Callback = function()
        local character = Players.LocalPlayer.Character
        if character then
            local root = character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = root.CFrame - Vector3.new(0, 189, 0)
            end
        end
    end
})

Tabs.Visual:AddButton({
    Title = "Tween Steal",
    Description = "Tween to delivery box",
    Callback = function()
        local base = nil
        for _, v in pairs(workspace:WaitForChild("Plots"):GetChildren()) do
            local yourBase = v:FindFirstChild("YourBase", true)
            if yourBase and yourBase.Enabled then
                base = v:FindFirstChild("DeliveryHitbox", true)
                break
            end
        end

        if base and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("Humanoid") then
            local hrp = LocalPlayer.Character.HumanoidRootPart
            local humanoid = LocalPlayer.Character.Humanoid
            local tppos = Vector3.new(base.Position.X, hrp.Position.Y, base.Position.Z)

            local tweenInfo = TweenInfo.new(
                (tppos - hrp.Position).Magnitude / humanoid.WalkSpeed,
                Enum.EasingStyle.Linear,
                Enum.EasingDirection.Out
            )

            local tween = TweenService:Create(hrp, tweenInfo, {
                CFrame = CFrame.new(tppos),
                Velocity = Vector3.new(0, 0, 0)
            })

            tween:Play()
        end
    end
})

-- GUI Section
local GuiSection = Tabs.Visual:AddSection("Gui")

Tabs.Visual:AddButton({
    Title = "Steal",
    Description = "Open steal GUI",
    Callback = function()
        -- Insert the steal GUI code here (simplified for brevity)
        Window:Dialog({
            Title = "Steal GUI",
            Content = "Steal GUI has been opened!",
            Buttons = {
                {
                    Title = "OK",
                    Callback = function() end
                }
            }
        })
    end
})

Tabs.Visual:AddButton({
    Title = "Float",
    Description = "Open float GUI",
    Callback = function()
        -- Insert the float GUI code here (simplified for brevity)
        Window:Dialog({
            Title = "Float GUI",
            Content = "Float GUI has been opened!",
            Buttons = {
                {
                    Title = "OK",
                    Callback = function() end
                }
            }
        })
    end
})

-- Misc Tab
Tabs.Misc:AddButton({
    Title = "Rejoin",
    Description = "Rejoin the current server",
    Callback = function()
        local ts = game:GetService("TeleportService")
        local p = game:GetService("Players").LocalPlayer
        ts:Teleport(game.PlaceId, p)
    end
})

Tabs.Misc:AddButton({
    Title = "Server Hop",
    Description = "Join a different server",
    Callback = function()
        local Http = game:GetService("HttpService")
        local TPS = game:GetService("TeleportService")
        local Api = "https://games.roblox.com/v1/games/"
        local _place = game.PlaceId
        local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
        
        function ListServers(cursor)
           local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
           return Http:JSONDecode(Raw)
        end
        
        local Server, Next; repeat
           local Servers = ListServers(Next)
           Server = Servers.data[1]
           Next = Servers.nextPageCursor
        until Server
        
        TPS:TeleportToPlaceInstance(_place,Server.id,game.Players.LocalPlayer)
    end
})

-- Server Section
local ServerSection = Tabs.Misc:AddSection("Server")

Tabs.Misc:AddParagraph({
    Title = "Current Job ID",
    Content = game.JobId
})

Tabs.Misc:AddButton({
    Title = "Copy Job ID",
    Description = "Copy current server ID",
    Callback = function()
        setclipboard(game.JobId)
        Window:Dialog({
            Title = "Success",
            Content = "Job ID copied to clipboard!",
            Buttons = {
                {
                    Title = "OK",
                    Callback = function() end
                }
            }
        })
    end
})

local JobIdInput = Tabs.Misc:AddInput("JobIdInput", {
    Title = "Enter Job ID",
    Default = "",
    Placeholder = "Paste Job ID here...",
    Numeric = false,
    Finished = false,
})

JobIdInput:OnChanged(function(Value)
    _G.JobId = Value
end)

Tabs.Misc:AddButton({
    Title = "Join Job ID",
    Description = "Join server with entered Job ID",
    Callback = function()
        if _G.JobId and _G.JobId ~= "" then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, _G.JobId)
        else
            Window:Dialog({
                Title = "Error",
                Content = "Please enter a valid Job ID first!",
                Buttons = {
                    {
                        Title = "OK",
                        Callback = function() end
                    }
                }
            })
        end
    end
})

-- Initialize window
Window:SelectTab(1)
-- S·ª± ki·ªán n√∫t GetKey

getKey.MouseButton1Click:Connect(function()
    if setclipboard then
        setclipboard("https://discord.gg/ARBJ4kGPKj")
        game.StarterGui:SetCore("SendNotification",{
            Title="‚úÖ GetKey";
            Text="ƒê√£ sao ch√©p link Discord!";
            Duration=3;
        })
    else
        warn("Executor kh√¥ng h·ªó tr·ª£ setclipboard.")
    end
end)

-- S·ª± ki·ªán n√∫t Submit
submit.MouseButton1Click:Connect(function()
    if box.Text == "ZUMARU-UDHANU" then
        game.StarterGui:SetCore("SendNotification",{
            Title="‚úÖ ƒê√∫ng Key";
            Text="ƒêang m·ªü kh√≥a...";
            Duration=3;
        })
        sg:Destroy() -- t·∫Øt UI Key System
        
        -- Load main hub ch·ªâ khi key ƒë√∫ng
        loadMainHub()
    else
        game.StarterGui:SetCore("SendNotification",{
            Title="‚ùå Sai Key";
            Text="H√£y th·ª≠ l·∫°i!";
            Duration=3;
        })
    end
end)

-- S·ª± ki·ªán n√∫t Exit
exit.MouseButton1Click:Connect(function()
    sg:Destroy()
end)